#!/bin/bash
echo '/************************************************************************/'
info '/*  IP INFO                                                             */'
echo '/************************************************************************/'
ifconfig | grep -i mask | grep -i inet

osname=`uname`
if [ $osname == "Darwin" ]; then
    echo "ERROR"
    echo "    this mem cmd is not for apple osx system. exit"
    exit
fi

echo '/************************************************************************/'
info '/*  DUBBO SERVICE PROCESS RSS MEMORY INFORMATION                        */'
echo '/************************************************************************/'
svc=(`ps aux | sort | grep "dubbo-.\..\..\.jar" | awk -F':' '{print $40}' | awk -F'/' '{print $4}' | awk -F'-' '{print $1}'`)
svc=(`ps aux | sort | grep "dubbo-.\..\..\.jar" | awk -F':' '{print $40}' | awk -F'/' '{print $1"/"$3"/"$4"/"$5}'`)
svc=(`ps aux | sort | grep "dubbo-.\..\..\.jar" | awk -F':' '{print $29}' | awk -F'/' '{print $3"/"$4"/"$5"/"$6"/"$7}'`)
if [ ${#svc[@]} = 0 ]; then
	echo "No process found now"
else
    pid=`ps aux | sort | grep -v grep | grep "dubbo-.\..\..\.jar" | awk '{print $2}'`
    idx=0
    for i in $pid; do
        rss=`cat /proc/$i/status | grep VmRSS | awk '{print $2}'`
        let rss=$rss/1024
        printf "pid=%5d\trss=%4dM\tprocess_name=%s\n" $i $rss ${svc[$idx]}
        let idx=$idx+1
    done
fi

echo
echo
echo '/************************************************************************/'
info '/*  REDIS-SVR PROCESS     RSS MEMORY INFORMATION                        */'
echo '/************************************************************************/'
svc=(`ps aux | sort | grep -v grep | grep redis-server | awk '{print $11}' | awk -F':' '{print $1}' | awk -F'\.\.' '{print $1}' | sort`)
if [ ${#svc[@]} = 0 ]; then
	echo "No process found now"
else
    pid=`ps aux | sort | grep -v grep | grep redis-server | awk '{print $2}'`
    idx=0
    for i in $pid; do
        rss=`cat /proc/$i/status | grep VmRSS | awk '{print $2}'`
        let rss=$rss/1024
        printf "pid=%5d\trss=%4dM\tprocess_name=%s\n" $i $rss ${svc[$idx]}
        let idx=$idx+1
    done
fi


echo
echo
echo '/************************************************************************/'
info '/*  ZOOKEEPER PROCESS     RSS MEMORY INFORMATION                        */'
echo '/************************************************************************/'
svc=(`ps aux | sort | grep -v grep | grep zookeeper.log.dir | awk '{print $15}' | awk -F':' '{print $1}' | awk -F'/bin/\.\./' '{print $1}' | sort`)
if [ ${#svc[@]} = 0 ]; then
	echo "No process found now"
else
    pid=`ps aux | sort | grep -v grep | grep zookeeper.log.dir | awk '{print $2}'`
    idx=0
    for i in $pid; do
        rss=`cat /proc/$i/status | grep VmRSS | awk '{print $2}'`
        let rss=$rss/1024
        printf "pid=%5d\trss=%4dM\tprocess_name=%s\n" $i $rss ${svc[$idx]}
        let idx=$idx+1
    done
fi


echo
echo
echo '/************************************************************************/'
info '/*  WEB APPLICATION       RSS MEMORY INFORMATION                        */'
echo '/************************************************************************/'
svc=(`ps aux | sort | grep -v grep | grep tomcat | awk '{print $12}' | awk -F'=' '{print $2}' | awk -F'/conf/' '{print $1}'`)
if [ ${#svc[@]} = 0 ]; then
	echo "No process found now"
else
    pid=`ps aux | sort | grep -v grep | grep tomcat | awk '{print $2}'`
    idx=0
    for i in $pid; do
        rss=`cat /proc/$i/status | grep VmRSS | awk '{print $2}'`
        port=`grep Connector ${svc[$idx]}/conf/server.xml | grep protocol | grep HTTP | awk -F'"' '{print $2}'`
        let rss=$rss/1024
        printf "pid=%5d\trss=%4dM\tport=%4d\t%s\n" $i $rss $port ${svc[$idx]}
        let idx=$idx+1
    done
fi



echo
echo
echo '/************************************************************************/'
info '/*  SYSTEM PROCESSES      RSS MEMORY INFORMATION                        */'
echo '/************************************************************************/'
cat /proc/meminfo | head -n 7



if [ "$1" = "-k" ]; then
    echo '/************************************************************************/'
    info '/*  KILL ALL THE SYSTEM PROCESSES                                       */'
    echo '/************************************************************************/'
    mem | grep pid | grep "$2" |  cut -c 5-9 | while read i; do echo kill $i; kill $i; done
fi
